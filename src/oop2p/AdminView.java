/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop2p;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.event.WindowAdapter;
import java.io.File;
import javax.swing.JFileChooser;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;


/**
 *
 * @author aryam
 */
public class AdminView extends javax.swing.JFrame {
    Admin admin=new Admin();
    Connection con;
    Statement st;
    ResultSet rs;
    public JFileChooser chooser=new JFileChooser();
    public File file=chooser.getSelectedFile();
    public static boolean flag;
   
   
    /**
     * Creates new form AdminView
     */
    public AdminView() {
        initComponents();
        admin.fillTable(bookTable);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        y = new javax.swing.JTextField();
        s = new javax.swing.JTextField();
        b = new javax.swing.JTextField();
        a = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ty = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        pr = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        rat = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Bookcov = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AdminView");

        jPanel1.setBackground(new java.awt.Color(247, 247, 222));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oop2p/Logo.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 100, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" Admin view ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 260, 40));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Title :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        t.setBackground(new java.awt.Color(253, 253, 243));
        t.setToolTipText("Insert book Title ");
        t.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });
        jPanel1.add(t, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 110, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Book ID:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 60, 20));

        bi.setBackground(new java.awt.Color(253, 253, 243));
        bi.setToolTipText("Enter Book ID here ");
        bi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biActionPerformed(evt);
            }
        });
        jPanel1.add(bi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 110, 20));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Year :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 60, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Section:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Branch:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        y.setBackground(new java.awt.Color(253, 253, 243));
        y.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(y, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 110, -1));

        s.setBackground(new java.awt.Color(253, 253, 243));
        s.setToolTipText("Drama,Action,Math...etc");
        s.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 110, -1));

        b.setBackground(new java.awt.Color(253, 253, 243));
        b.setToolTipText("khobar or dammam");
        b.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });
        jPanel1.add(b, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 110, -1));

        a.setBackground(new java.awt.Color(253, 253, 243));
        a.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 110, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Author:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 60, 20));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Type :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        ty.setBackground(new java.awt.Color(253, 253, 243));
        ty.setToolTipText("study books or other books ");
        ty.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(ty, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 110, -1));

        bookTable.setBackground(new java.awt.Color(235, 235, 223));
        bookTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bookTable.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        bookTable.setForeground(new java.awt.Color(102, 51, 0));
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title ", "Book ID", "Year ", "Section ", "branch ", "Type", "Author", "price", "Rating "
            }
        ));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 560, 110));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Price:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 40, -1));

        pr.setBackground(new java.awt.Color(253, 253, 243));
        pr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(pr, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 110, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Rating:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        rat.setBackground(new java.awt.Color(253, 253, 243));
        rat.setToolTipText("Book Rate out of 10");
        rat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(rat, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 110, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Book Cover:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 90, 40));

        jButton4.setBackground(new java.awt.Color(247, 247, 239));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Set Book cover");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, -1, -1));

        jPanel3.setBackground(new java.awt.Color(245, 245, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Bookcov.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(Bookcov, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 110));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 80, 110));

        jPanel2.setBackground(new java.awt.Color(252, 252, 235));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(201, 201, 196));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Update Book ");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 230, -1));

        jButton3.setBackground(new java.awt.Color(222, 222, 200));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Delete book");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 230, -1));

        jButton1.setBackground(new java.awt.Color(233, 231, 226));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Add book ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 230, -1));

        jButton5.setBackground(new java.awt.Color(240, 240, 234));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 230, -1));

        jButton7.setBackground(new java.awt.Color(250, 250, 235));
        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton7.setText("Logout ");
        jButton7.setToolTipText("");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 230, -1));

        jButton6.setBackground(new java.awt.Color(255, 255, 245));
        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton6.setText("Exit ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 250, 240, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oop2p/adminb.jpg"))); // NOI18N
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 300));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 340, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 // private void fillTable(){
     // admin.fillTable(bookTable);

  //}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
             flag = true;
        ArrayList<String> wrong = new ArrayList<>();
       char[]ti=t.getText().toCharArray();
       char[]boi=bi.getText().toCharArray();
       char[]yr=y.getText().toCharArray();
       char[]sec=s.getText().toCharArray();
       char[] au=a.getText().toCharArray();
       char[] pri=pr.getText().toCharArray();
       char[] rate=rat.getText().toCharArray();
        if (t.getText().equals("")) {
            wrong.add("Title is Empty");
            flag = false;}
        else{
            for(char c : ti){
                    if(!Character.isLetter(c)&& !Character.isWhitespace(c)){
                        wrong.add("Title should contains only  Letters");
                        flag=false;
                        break;
                    }}
                    }
        if(!(admin.ifbookexist(bi.getText())==0)){
           wrong.add("Book ID already exists");
           flag=false;
       }
        else if (bi.getText().equals("")) {
            wrong.add("Book id is Empty");
            flag = false;}
            else{
              for(char c:boi){
                  if(!Character.isDigit(c)){
                      flag = false;
                  
                       wrong.add("Book id should contains only Digits");
                  break;
                  }}
                       
                  }         
       if (y.getText().equals("")) {
            wrong.add("Publishing year is Empty");
            flag = false;}
       else{
           for(char c : yr){
               if(!Character.isDigit(c)){
                   flag = false;
               
                   wrong.add("Publishing year should contains only Digits");
                   break;
               }}
                       
               
           
       }
        if (s.getText().equals("")) {
            wrong.add("Section is Empty");
            flag = false;
        } else {
            for(char c:sec){
                    if(!Character.isLetter(c)){
                        flag=false;
                    wrong.add("Book Section should contains only  Letters");
                    break;
                    }}}
        
            
        if (b.getText().equals("")) {
            wrong.add("Branch is Empty");
            flag = false;} 
        else if(!("khobar".equals(b.getText())||"dammam".equals(b.getText()))){
                           flag=false;
                    wrong.add("Book Branchs are only Dammam and Khobar");
    }
               
                    
                 
        if (ty.getText().equals("")) {
            wrong.add("Book type is Empty");
            flag = false;} 
        else if(!("study books".equals(ty.getText())||"other books".equals(ty.getText()))){
                           flag=false;
                    wrong.add("Book type should only be study books or other books");}
            
        if (a.getText().equals("")) {
            wrong.add("Author is Empty");
            flag = false;}
        else{
            for(char c:au){
                    if(!Character.isLetter(c)&& !Character.isWhitespace(c)){
                        flag=false;
                    wrong.add("Author name should contains only  Letters");
                    break;}}}
        
        if (pr.getText().equals("")) {
            wrong.add("Book price is Empty");
            flag = false;
         }else{
            try{
                Integer.parseInt(pr.getText());
            }
            catch(NumberFormatException e){
                wrong.add("Price can only be an Integer value");
                flag=false;
            }
//            for(char c:pri){
//                    if(!Character.isDigit(c)){
//                        flag=false;
//                    wrong.add("price should contains only digits");
//                    break;}}
            }
        if (rat.getText().equals("")) {
            wrong.add("Rating is Empty");
            flag = false;
         }else {
           
       try{
           int rating=Integer.parseInt(rat.getText());
           if(!(rating>=1&&rating<=10)) { 
             wrong.add("Rating Should be out of 10 starting from 1, in digits only");
              flag = false;}}
//             else{
//                     for(char c:rate){
//                   if(!Character.isDigit(c)){
//                       flag=false;
//                      wrong.add("Rating should contains only digits");
//                    break;}
//                      }}}
       catch(NumberFormatException e){
               wrong.add("Rating can only be an Integer value");
                 flag=false;
               }} 
//       if (rat.getText().equals("")) {
//            wrong.add("Rating is Empty");
//            flag = false;
//         }else if(!(Integer.valueOf(rat.getText())>=1&& Integer.valueOf(rat.getText())<=10)){
//              wrong.add("Rating Should be out of 10 starting from 1, in digits only");
//               flag = false;
             
//            for(char c:rate){
//                    if(!Character.isDigit(c)){
//                       flag=false;
//                    wrong.add("Rating should contains only digits");
//                    break;}}
            
       if(Admin.file==null){
           wrong.add("please select a book cover");
           flag=false;
       }
        

        
        if (flag) {
           var path=Admin.file.getName();
              String base="/oop2p/";
              String name=base+path;
        admin.addBook(t, bi, y, s, b, ty, a, pr, rat, Bookcov, bookTable,name);
                  
                 
        }
        else {
            String str = "Please fix the following:";
            for (int i = 0; i < wrong.size(); i++) {
                str += ("\n" + (1 + i) + " ." + wrong.get(i));
            }
            JOptionPane.showMessageDialog(null, str, "warning", JOptionPane.ERROR_MESSAGE);
    
    }
        
        
//        var path=Admin.file.getName();
//              String base="/oop2p/";
//              String name=base+path;
//        admin.addBook(t, bi, y, s, b, ty, a, pr, rat, Bookcov, bookTable,name);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          admin.deleteBook(t, bi, y, s, b, ty, a, pr, rat, Bookcov, bookTable);
                      
//        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                   flag = true;
        ArrayList<String> wrong = new ArrayList<>();
       char[]ti=t.getText().toCharArray();
       char[]boi=bi.getText().toCharArray();
       char[]yr=y.getText().toCharArray();
       char[]sec=s.getText().toCharArray();
       char[] au=a.getText().toCharArray();
       char[] pri=pr.getText().toCharArray();
       char[] rate=rat.getText().toCharArray();
        if (t.getText().equals("")) {
            wrong.add("Title is Empty");
            flag = false;}
        else{
            for(char c : ti){
                    if(!Character.isLetter(c)&&!Character.isWhitespace(c)){
                        wrong.add("Title should contains only  Letters");
                        flag=false;
                        break;
                    }}
                    }
        if (bi.getText().equals("")) {
            wrong.add("Book id is Empty");
            flag = false;}
            else{
              for(char c:boi){
                  if(!Character.isDigit(c)){
                      flag = false;
                  
                       wrong.add("Book id should contains only Digits");
                  break;
                  }}
                       
                  }
       if (y.getText().equals("")) {
            wrong.add("Publishing year is Empty");
            flag = false;}
       else{
           for(char c : yr){
               if(!Character.isDigit(c)){
                   flag = false;
               
                   wrong.add("Publishing year should contains only Digits");
                   break;
               }}
                       
               
           
       }
        if (s.getText().equals("")) {
            wrong.add("Section is Empty");
            flag = false;
        } else {
            for(char c:sec){
                    if(!Character.isLetter(c)){
                        flag=false;
                    wrong.add("Book Section should contains only  Letters");
                    break;
                    }}}
        
            
        if (b.getText().equals("")) {
            wrong.add("Branch is Empty");
            flag = false;} 
        else if(!("khobar".equals(b.getText())||"dammam".equals(b.getText()))){
                           flag=false;
                    wrong.add("Book Branchs are only Dammam and Khobar");
    }
               
                    
                 
        if (ty.getText().equals("")) {
            wrong.add("Book type is Empty");
            flag = false;} 
        else if(!("study books".equals(ty.getText())||"other books".equals(ty.getText()))){
                           flag=false;
                    wrong.add("Book type should only be study books or other books");}
            
        if (a.getText().equals("")) {
            wrong.add("Author is Empty");
            flag = false;}
        else{
            for(char c:au){
                    if(!Character.isLetter(c)&&!Character.isWhitespace(c)){
                        flag=false;
                    wrong.add("Author name should contains only  Letters");
                    break;}}}
        
        if (pr.getText().equals("")) {
            wrong.add("Book price is Empty");
            flag = false;
         }else{
            try{
                Integer.parseInt(pr.getText());
            }
            catch(NumberFormatException e){
                wrong.add("Price can only be an Integer value");
                flag=false;
            }
//            for(char c:pri){
//                    if(!Character.isDigit(c)){
//                        flag=false;
//                    wrong.add("price should contains only digits");
//                    break;}}
            }
         
       if (rat.getText().equals("")) {
            wrong.add("Rating is Empty");
            flag = false;
         }else {
           
       try{
           int rating=Integer.parseInt(rat.getText());
           if(!(rating>=1&&rating<=10)) { 
             wrong.add("Rating Should be out of 10 starting from 1, in digits only");
              flag = false;}}
//             else{
//                     for(char c:rate){
//                   if(!Character.isDigit(c)){
//                       flag=false;
//                      wrong.add("Rating should contains only digits");
//                    break;}
//                      }}}
       catch(NumberFormatException e){
               wrong.add("Rating can only be an Integer value");
                 flag=false;
               }}
//                wrong.add("Rating can only be an Integer value");
//                flag=false;
//          else{
//             try{
//                Integer.parseInt(rat.getText());
//            }
//            catch(NumberFormatException e){
//                wrong.add("Rating can only be an Integer value");
//                flag=false;
                       
                       
//            for(char c:rate){
//                    if(!Character.isDigit(c)){
//                        flag=false;
//                    wrong.add("Rating should contains only digits");
//                    break;}}}
                 
        if (flag) {
        admin.updateBook(t, bi, y, s, b, ty, a, pr, rat,bookTable);
                  
                 
        }
        else {
            String str = "Please fix the following:";
            for (int i = 0; i < wrong.size(); i++) {
                str += ("\n" + (1 + i) + " ." + wrong.get(i));
            }
            JOptionPane.showMessageDialog(null, str, "warning", JOptionPane.ERROR_MESSAGE);
    
    }


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
              admin.booksinfo(t, bi, y, s, b, ty, a, pr, rat, Bookcov, bookTable);
              jButton2.setVisible(true);
              jButton3.setVisible(true);
              jButton1.setVisible(false);
              jButton4.setVisible(false);
              
        // TODO add your handling code here:
    }//GEN-LAST:event_bookTableMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
              admin.addCover(Bookcov);

         
         
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        JFrame frame=new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame, "Are you sure you want to Exit?","Exit",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
         new login().setVisible(true);
         this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
              
           t.setText("");
           bi.setText("");
           y.setText("");
           s.setText("");
           b.setText("");
           ty.setText("");
           a.setText("");
           pr.setText("");
          rat.setText("");
           Bookcov.setIcon(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
      t.setText("");
           bi.setText("");
           y.setText("");
           s.setText("");
           b.setText("");
           ty.setText("");
           a.setText("");
           pr.setText("");
          rat.setText("");
           Bookcov.setIcon(null);
           jButton2.setVisible(false);
           jButton3.setVisible(false);
           jButton1.setVisible(true);
           jButton4.setVisible(true);
           
        
// TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void biActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_biActionPerformed

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bookcov;
    private javax.swing.JTextField a;
    private javax.swing.JTextField b;
    private javax.swing.JTextField bi;
    private javax.swing.JTable bookTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pr;
    private javax.swing.JTextField rat;
    private javax.swing.JTextField s;
    private javax.swing.JTextField t;
    private javax.swing.JTextField ty;
    private javax.swing.JTextField y;
    // End of variables declaration//GEN-END:variables
}
